apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    alb.ingress.kubernetes.io/group.name: "shared-alb"
    alb.ingress.kubernetes.io/healthcheck-path: "/"
    alb.ingress.kubernetes.io/healthcheck-port: "15672"
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    kubernetes.io/ingress.class: "alb"  # Specifies that the AWS ALB Ingress Controller should manage this Ingress
    alb.ingress.kubernetes.io/scheme: internet-facing # "internet-facing" for public access, "internal" for private
    alb.ingress.kubernetes.io/target-type: ip # Use "ip" for pod IP targets, or "instance" for instance targets
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]' # Configure both HTTP and HTTPS listeners
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-south-1:183631328007:certificate/ac1792d9-248a-40d7-9e2c-da1ab2986e4b
    alb.ingress.kubernetes.io/ssl-redirect: '443' # Redirect HTTP traffic to HTTPS
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": {"Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
spec:
  rules:
    - host: rabbitmq.dev.sidsfarm.com
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: rabbitmq-service
              port:
                number: 15672  # Management UI
    - host: test-api.dev.sidsfarm.com
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: backend-web
              port:
                number: 8000           
  
